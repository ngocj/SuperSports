@model IEnumerable<SP.Application.Dto.OrderDto.OrderViewDto>
@using SP.Domain.Entity
@{
    ViewData["Title"] = "GetAllOrder";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<div class="container-fluid pt-4 px-4">
    <div class="bg-light rounded p-4 shadow-sm">
        <div class="d-flex align-items-center justify-content-between mb-4">
            <h5 class="mb-0 text-primary fw-bold">
                <i class="fas fa-shopping-cart me-2"></i> Danh sách đơn hàng
            </h5>
            <a href="@Url.Action("CreateOrder", "Order")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i> Tạo đơn hàng mới
            </a>
        </div>

        <!-- Dropdown lọc trạng thái -->
        <div class="mb-3">
            <label for="statusFilter" class="form-label fw-bold">Lọc theo trạng thái:</label>
            <select id="statusFilter" class="form-select w-auto d-inline-block ms-2">
                <option value="">Tất cả</option>
                <option value="Chờ xác nhận">Chờ xác nhận</option>
                <option value="Đã xác nhận">Đã xác nhận</option>
                <option value="Đang giao">Đang giao</option>
                <option value="Đã giao">Đã giao</option>
                <option value="Đã huỷ">Đã huỷ</option>
                <option value="Đã thanh toán">Đã thanh toán</option>
            </select>
        </div>

        <div class="table-responsive">
            <table id="orderTable" class="table table-striped table-hover">
                <thead class="table">
                    <tr class="text-center">
                        <th>Mã đơn hàng</th>
                        <th>Mã khách hàng</th>
                        <th>Tên khách hàng</th>
                        <th>Ngày đặt</th>
                        <th>Tổng tiền</th>
                        <th>Trạng thái</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr class="align-middle text-center">
                            <td class="fw-bold">
                                @(item.Id.ToString().Length > 20 ? item.Id.ToString().Substring(0, 22) + "..." : item.Id.ToString())
                            </td>
                            <td>
                                @(item.UserId.ToString().Length > 20 ? item.UserId.ToString().Substring(0, 22) + "..." : item.UserId.ToString())
                            </td>
                            <td>@item.UserName</td>
                            <td>@item.CreatedAt.ToString("dd/MM/yyyy")</td>
                            <td class="fw-bold price-column">@string.Format("{0:#,##0} đ", item.TotalPrice)</td>
                            <td>
                                @{
                                    string statusClass = item.Status switch
                                    {
                                        OrderStatus.Pending => "badge bg-warning text-white",
                                        OrderStatus.Confirmed => "badge bg-info text-white",
                                        OrderStatus.Shipping => "badge bg-primary text-white",
                                        OrderStatus.Delivered => "badge bg-success text-white",
                                        OrderStatus.Canceled => "badge bg-danger text-white",
                                        OrderStatus.Paid => "badge bg-success text-white",
                                        _ => "badge bg-secondary text-white"
                                    };

                                    string statusText = item.Status switch
                                    {
                                        OrderStatus.Pending => "Chờ xác nhận",
                                        OrderStatus.Confirmed => "Đã xác nhận",
                                        OrderStatus.Shipping => "Đang giao",
                                        OrderStatus.Delivered => "Đã giao",
                                        OrderStatus.Canceled => "Đã huỷ",
                                        OrderStatus.Paid => "Đã thanh toán",
                                        _ => item.Status.ToString()
                                    };
                                }
                                <span class="@statusClass status-badge">@statusText</span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <a href="@Url.Action("DetailOrder", "Order", new { id = item.Id })" class="btn btn-sm btn-info action-btn">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a href="@Url.Action("UpdateOrder", "Order", new { id = item.Id })" class="btn btn-sm btn-primary action-btn">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a href="@Url.Action("DeleteOrder", "Order", new { id = item.Id })"
                                       onclick="return confirm('Bạn có chắc muốn xóa đơn hàng này không?')"
                                       class="btn btn-sm btn-danger action-btn delete-order">
                                        <i class="fas fa-trash-alt"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Thư viện DataTables cơ bản -->
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>

@section Scripts {
    <script>
        $(document).ready(function () {
            var table = $('#orderTable').DataTable({
                language: {
                    lengthMenu: "Hiển thị _MENU_ dòng",
                    zeroRecords: "Không tìm thấy dữ liệu",
                    info: "Trang _PAGE_ trên _PAGES_",
                    infoEmpty: "Không có dữ liệu",
                    infoFiltered: "(lọc từ _MAX_ dòng)",
                    paginate: {
                        first: "Đầu",
                        last: "Cuối",
                        next: "Sau",
                        previous: "Trước"
                    }
                },
                pageLength: 10,
                lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "Tất cả"]],
                order: [[3, 'desc']],
                columnDefs: [
                    { orderable: false, targets: 6 }
                ],
                responsive: true
            });

            // Lọc theo trạng thái
            $('#statusFilter').on('change', function () {
                var val = $(this).val();
                table.column(5).search(val).draw();
            });
        });
    </script>
}
