@model SP.Application.Dto.OrderDto.OrderViewDto
@using SP.Domain.Entity
@{
    ViewData["Title"] = "Order Details";
    Layout = "~/Views/Shared/_LayoutManager.cshtml";
}

<div class="order-detail-container">
    <div class="order-header">
        <div class="order-title">
            <h1>Chi tiết đơn hàng</h1>
            <span class="order-number">Mã đơn hàng: #@Model.Id</span>
        </div>
        <div class="order-meta">
            <div class="order-status-badge @Model.Status.ToString().ToLower()">
               
                    @{
                        string statusClass = Model.Status switch
                        {
                            OrderStatus.Pending => "badge bg-warning text-white",
                            OrderStatus.Confirmed => "badge bg-info text-white",
                            OrderStatus.Shipping => "badge bg-primary text-white",
                            OrderStatus.Delivered => "badge bg-success text-white",
                            OrderStatus.Canceled => "badge bg-danger text-white",
                            OrderStatus.Paid => "badge bg-purple text-white",
                            _ => "badge bg-secondary text-white"
                        };

                            string statusText = Model.Status switch
                        {
                            OrderStatus.Pending => "Chờ xác nhận",
                            OrderStatus.Confirmed => "Đã xác nhận",
                            OrderStatus.Shipping => "Đang giao",
                            OrderStatus.Delivered => "Đã giao",
                            OrderStatus.Canceled => "Đã huỷ",
                            OrderStatus.Paid => "Đã thanh toán",
                        _ => Model.Status.ToString()
                        };
                    }
                    <span class="@statusClass status-badge">@statusText</span>
            </div>
            <div class="employee-info">
                <i class="fas fa-user-tie"></i>
                <span>Xử lý bởi: <strong>@(string.IsNullOrEmpty(Model.EmployeeName) ? "Chưa phân công" : Model.EmployeeName)</strong></span>
            </div>
        </div>
    </div>

    <div class="order-info-cards">
        <div class="info-card">
            <div class="card-header">
                <i class="fas fa-user-circle"></i>
                <h3>Thông tin khách hàng</h3>
            </div>
            <div class="card-body">
                <p><strong>Tên:</strong> @Model.UserName</p>
                <p><strong>Ngày đặt hàng:</strong> @Model.CreatedAt.ToString("dd MMMM yyyy, HH:mm")</p>
            </div>
        </div>

        <div class="info-card">
            <div class="card-header">
                <i class="fas fa-map-marker-alt"></i>
                <h3>Địa chỉ giao hàng</h3>
            </div>
            <div class="card-body">
                <p>@Model.AddressDetail</p>
            </div>
        </div>

        <div class="info-card">
            <div class="card-header">
                <i class="fas fa-money-bill-wave"></i>
                <h3>Thông tin thanh toán</h3>
            </div>
            <div class="card-body">
                <p>
                    <strong>Tổng tiền: </strong><span class="amount">@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", Model.TotalPrice)</span>
                </p>
            </div>
        </div>
    </div>

    <div class="order-items">
        <div class="section-header">
            <h2>Sản phẩm đã đặt</h2>
            <span class="item-count">@Model.OrderDetails.Count() sản phẩm</span>
        </div>

        <div class="table-responsive">
            <table class="order-items-table table ">
                <thead>
                    <tr>
                        <th class="text-center">Sản phẩm</th>
                        <th class="text-center">Size</th>
                        <th class="text-center">Màu sắc</th>
                        <th class="text-center">Số lượng</th>
                        <th class="text-center">Thành tiền</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.OrderDetails)
                    {
                        <tr>
                            <td class="text-center">
                                <div class="product-info d-flex flex-column align-items-center">
                                    @if (item.ProductVariant.Images != null && item.ProductVariant.Images.Any())
                                    {
                                        var imageFile = item.ProductVariant.Images.FirstOrDefault();
                                        var imageSrc = imageFile?.FileData != null
                                        ? $"data:{imageFile.ContentType};base64,{Convert.ToBase64String(imageFile.FileData)}"
                                        : "";
                                        var altText = imageFile?.FileData != null ? item.ProductVariant.ProductName : "Không có ảnh";

                                        <img src="@imageSrc" alt="@altText" class="img-thumbnail mb-1" style="width: 60px; height: 60px; object-fit: cover;" />
                                    }
                                    else
                                    {
                                        <div class="no-image mb-1">Không có ảnh</div>
                                    }
                                    <span>@item.ProductVariant.ProductName</span>
                                </div>
                            </td>
                            <td class="text-center">@item.ProductVariant.Size</td>
                            <td class="text-center">
                                 <span class="color-dot" style="background-color: @item.ProductVariant.Color"></span>
                            </td>
                            <td class="text-center">@item.Quantity</td>
                            <td class="text-center">@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", item.ProductVariant.Price * item.Quantity)</td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="4" class="text-right font-weight-bold">Tổng tiền :</td>
                        <td class="text-center">@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", Model.TotalPrice)</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>

    <div class="action-buttons">
        <button type="button" class="btn btn-print" onclick="window.print()">
            <i class="fas fa-print"></i> In hóa đơn
        </button>
        @{
            string controllerName = User.IsInRole("Manager") ? "Manager" : "Employee";
        }
        <a href="@Url.Action("GetAllOrder", controllerName)" class="btn btn-back">
            <i class="fas fa-arrow-left"></i> Quay lại danh sách
        </a>

    </div>
</div>

<style>
    /* General Styling */
    .order-detail-container {
        padding: 25px;
        background-color: #f8f9fa;
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0,0,0,0.05);
        margin: 20px 0;
    }

    /* Order Header */
    .order-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 25px;
        padding-bottom: 15px;
        border-bottom: 1px solid #e9ecef;
    }

    .order-meta {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 12px;
    }

    .order-title {
        display: flex;
        flex-direction: column;
    }

    .order-title h1 {
        margin: 0;
        font-size: 28px;
        color: #212529;
    }

    .order-number {
        color: #6c757d;
        font-size: 14px;
        margin-top: 5px;
    }

    .employee-info {
        display: flex;
        align-items: center;
        gap: 8px;
        font-size: 14px;
        color: #495057;
        background-color: #e9ecef;
        padding: 8px 12px;
        border-radius: 6px;
    }

    .employee-info i {
        color: #4E73DF;
    }

    .employee-info strong {
        color: #212529;
    }

    .order-status-badge {
        padding: 8px 15px;
        border-radius: 20px;
        font-weight: bold;
        text-transform: uppercase;
        font-size: 12px;
        letter-spacing: 0.5px;
    }

    .order-status-badge.completed {
        background-color: #d4edda;
        color: #155724;
    }

    .order-status-badge.pending {
        background-color: #fff3cd;
        color: #856404;
    }

    .order-status-badge.processing {
        background-color: #cce5ff;
        color: #004085;
    }

    .order-status-badge.cancelled {
        background-color: #f8d7da;
        color: #721c24;
    }

    .order-status-badge.paid {
        background-color: #e2e3f3; 
        color: #383d75; 
    }

    /* Info Cards */
    .order-info-cards {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 30px;
    }

    .info-card {
        flex: 1;
        min-width: 250px;
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        overflow: hidden;
    }

    .card-header {
        background-color: #f1f3f5;
        padding: 15px;
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .card-header h3 {
        margin: 0;
        font-size: 16px;
        color: #343a40;
    }

    .card-header i {
        color: #4E73DF;
        font-size: 18px;
    }

    .card-body {
        padding: 15px;
    }

    .card-body p {
        margin: 8px 0;
        color: #495057;
    }

    .card-body .amount {
        font-weight: bold;
        color: #212529;
    }

    /* Order Items Section */
    .order-items {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
        padding: 20px;
        margin-bottom: 25px;
    }

    .section-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 15px;
    }

    .section-header h2 {
        margin: 0;
        font-size: 20px;
        color: #343a40;
    }

    .item-count {
        background-color: #e9ecef;
        padding: 5px 10px;
        border-radius: 15px;
        font-size: 14px;
        color: #495057;
    }

    /* Table Styling */
    .table-responsive {
        overflow-x: auto;
    }

    .order-items-table {
        width: 100%;
        border-collapse: collapse;
    }

    .order-items-table th {
        background-color: #f8f9fa;
        padding: 12px 15px;
        text-align: left;
        font-weight: 600;
        color: #495057;
        border-bottom: 2px solid #dee2e6;
    }

    .order-items-table td {
        padding: 15px;
        border-bottom: 1px solid #e9ecef;
        vertical-align: middle;
    }

    .order-items-table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .product-info {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    .product-info img {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 4px;
        border: 1px solid #dee2e6;
    }

    .no-image {
        width: 50px;
        height: 50px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #e9ecef;
        color: #6c757d;
        font-size: 10px;
        border-radius: 4px;
    }

    .color-display {
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .color-dot {
        width: 15px;
        height: 15px;
        border-radius: 50%;
        display: inline-block;
        border: 1px solid rgba(0,0,0,0.1);
    }

    .order-items-table tfoot td {
        font-weight: bold;
        color: #212529;
    }

    .text-right {
        text-align: right;
    }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 15px;
        justify-content: flex-end;
    }

    .btn {
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: 500;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        cursor: pointer;
        transition: all 0.2s;
        border: none;
        text-decoration: none;
    }

    .btn-print {
        background-color: #4E73DF;
        color: white;
    }

    .btn-print:hover {
            background-color: #4E73DF;
    }

    .btn-back {
        background-color: #e9ecef;
        color: #495057;
    }

    .btn-back:hover {
        background-color: #dee2e6;
    }

  
    
</style>