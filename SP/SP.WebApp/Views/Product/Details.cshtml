@model SP.Application.Dto.ProductDto.ProductViewDto

@{
    ViewData["Title"] = "Chi tiết sản phẩm";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    var groupedByColor = Model.ProductVariants
        .Where(v => !string.IsNullOrEmpty(v.Color))
        .GroupBy(v => v.Color)
        .ToList();
}

<div class="container py-4">
    <a href="@Url.Action("GetAllProduct", "Admin")" class="btn btn-outline-secondary btn-sm mb-3">
        <i class="bi bi-arrow-left me-1"></i> Quay lại danh sách
    </a>

    <div class="card shadow-sm p-4 mb-4 rounded-4 border-0">
        <h2 class="mb-3 fw-bold text-primary">@Model.ProductName</h2>
        <div class="row">
            <div class="col-md-4 mb-3 mb-md-0">
                <div class="info-item">
                    <span class="info-label">Danh mục:</span>
                    <span class="info-value">@Model.SubCategoryName</span>
                </div>
            </div>
            <div class="col-md-4 mb-3 mb-md-0">
                <div class="info-item">
                    <span class="info-label">Thương hiệu:</span>
                    <span class="info-value">@Model.BrandName</span>
                </div>
            </div>
            <div class="col-md-4">
                <div class="info-item">
                    <span class="info-label">Đánh giá:</span>
                    <span class="info-value rating-value">
                        @if (Model.ProductVariants != null && Model.ProductVariants.Any())
                        {
                            var rating = Model.ProductVariants.First().Rating;

                            if (rating.HasValue)
                            {
                                for (int i = 0; i < 5; i++)
                                {
                                    if (i < Math.Floor(rating.Value))
                                    {
                                        <i class="bi bi-star-fill text-warning"></i>
                                    }
                                    else if (i < Math.Ceiling(rating.Value) && rating.Value % 1 != 0)
                                    {
                                        <i class="bi bi-star-half text-warning"></i>
                                    }
                                    else
                                    {
                                        <i class="bi bi-star text-warning"></i>
                                    }
                                }
                                <span class="ms-2">(@rating.Value.ToString("F1"))</span>
                            }
                            else
                            {
                                <span class="text-muted">Chưa có đánh giá</span>
                            }
                        }
                        else
                        {
                            <span class="text-muted">Chưa có biến thể sản phẩm</span>
                        }
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm p-4 rounded-4 border-0">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h4 class="fw-semibold m-0">
                <i class="bi bi-list-ul me-2"></i>Danh sách biến thể
            </h4>
            <a href="@Url.Action("CreateProductVariant", "ProductVariant", new { productId = Model.Id })" class="btn btn-primary btn-sm">
                <i class="bi bi-plus-circle me-1"></i> Thêm biến thể
            </a>
        </div>

        @if (groupedByColor.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover align-middle custom-table">
                    <thead>
                        <tr>
                            <th class="text-center" width="100">Hình ảnh</th>
                            <th class="text-center" width="100">Màu sắc</th>
                            <th class="text-center">Kích cỡ</th>
                            <th class="text-center">Giá</th>
                            <th class="text-center">Số lượng</th>
                            <th class="text-center">Trạng thái</th>
                            <th class="text-center" width="180">Hành động</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var colorGroup in groupedByColor)
                        {
                            var firstVariant = colorGroup.FirstOrDefault();
                            var image = firstVariant?.Images?.FirstOrDefault();
                            string imgSrc = image?.FileData != null
                            ? $"data:{image.ContentType};base64,{Convert.ToBase64String(image.FileData)}"
                            : "";

                            <tr>
                                <td class="text-center">
                                    <div class="product-img-wrapper">
                                        @if (!string.IsNullOrEmpty(imgSrc))
                                        {
                                            <img src="@imgSrc" alt="Ảnh sản phẩm" class="product-img" />
                                        }
                                        else
                                        {
                                            <div class="no-image">
                                                <i class="bi bi-image text-muted"></i>
                                            </div>
                                        }
                                    </div>
                                </td>

                                <td class="text-center">
                                    <div class="color-display">
                                        <div class="color-circle" style="background-color: @(colorGroup.Key);" title="@colorGroup.Key"></div>
                                        
                                    </div>
                                </td>

                                <td>
                                    <div class="size-price-grid ">
                                        @foreach (var variant in colorGroup)
                                        {
                                            <div class="size-price-item ">
                                                <span class="badge-size">@variant.Size</span>
                                             
                                            </div>
                                        }
                                    </div>
                                </td>

                                <td>
                                    <div class="size-price-grid">
                                        @foreach (var variant in colorGroup)
                                        {
                                            <div class="size-price-item " style="padding:2.5px">
                                            
                                                <span class="price-value">@($"{variant.Price:#,##0} ₫")</span>
                                            </div>
                                        }
                                    </div>
                                </td>

                                <td>
                                    <div class="quantity-grid">
                                        @foreach (var variant in colorGroup)
                                        {
                                            <div class="quantity-item">
                                               
                                                <span class="badge-quantity @(variant.Quantity < 10 ? "low-stock" : "")">
                                                    @variant.Quantity
                                                    @if (variant.Quantity < 10)
                                                    {
                                                        <i class="bi bi-exclamation-triangle-fill ms-1" title="Sắp hết hàng"></i>
                                                    }
                                                </span>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td>
                                    <div class="status-grid">
                                        @foreach (var variant in colorGroup)
                                        {
                                            <div class="mb-2">
                                                @if (variant.IsActive)
                                                {
                                                    <span class="badge badge-success ml-2">
                                                        <i class="bi bi-check-circle-fill me-1"></i> Hoạt động
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-danger ml-2">
                                                        <i class="bi bi-x-circle-fill me-1"></i> Ngưng hoạt động
                                                    </span>
                                                }
                                            </div>
                                        }
                                    </div>
                                </td>

                                <td>
                                    <div class="action-buttons">
                                        @foreach (var variant in colorGroup)
                                        {
                                            <div class="action-group mb-2">
                                                <div class="btn-group btn-group-sm">
                                                    <a href="@Url.Action("EditProductVariant", "ProductVariant", new { id = variant.Id })" class="btn btn-outline-primary">
                                                        Chỉnh sửa
                                                    </a>
                                                    <a href="@Url.Action("DeleteProductVariant", "ProductVariant", new { id = variant.Id })" class="btn btn-outline-danger"
                                                       onclick="return confirm('Bạn có chắc chắn muốn xóa biến thể kích cỡ @variant.Size?')">
                                                        Xóa
                                                    </a>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="empty-state p-4 text-center">
                <i class="bi bi-box2 empty-icon"></i>
                <p class="mt-3 mb-0">Không có biến thể nào. Vui lòng thêm biến thể cho sản phẩm.</p>
            </div>
        }
    </div>
</div>

<style>
    /* Base styles */
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
        transition: box-shadow 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1) !important;
        }

    /* Product info section styles */
    .info-item {
        display: flex;
        align-items: center;
    }

    .info-label {
        font-weight: 600;
        margin-right: 8px;
        color: #495057;
        min-width: 100px;
    }

    .info-value {
        color: #343a40;
    }

    .rating-value {
        display: flex;
        align-items: center;
    }

    /* Table styles */
    .custom-table {
        border-radius: 12px;
        overflow: hidden;
        border-collapse: separate;
        border-spacing: 0;
        width: 100%;
        margin-bottom: 0;
    }

        .custom-table thead th {
            background-color: #f1f3f5;
            text-transform: uppercase;
            font-size: 12px;
            letter-spacing: 0.5px;
            padding: 15px 10px;
            font-weight: 600;
            color: #495057;
            border-bottom: 2px solid #dee2e6;
            white-space: nowrap;
            vertical-align: middle; /* Đảm bảo canh giữa theo chiều dọc */
        }

        /* Áp dụng text-center cho tất cả các cột */
        .custom-table th,
        .custom-table td {
            text-align: center;
            padding: 15px 10px;
            vertical-align: middle;
        }

        .custom-table tbody tr {
            transition: background-color 0.15s ease-in-out;
        }

            .custom-table tbody tr:hover {
                background-color: rgba(0, 123, 255, 0.03);
            }

        .custom-table td {
            border-bottom: 1px solid #edf2f7;
        }

    /* Product image styles */
    .product-img-wrapper {
        width: 70px;
        height: 70px;
        margin: 0 auto;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .product-img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

        .product-img:hover {
            transform: scale(1.05);
        }

    .no-image {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        font-size: 24px;
    }

    /* Color display styles */
    .color-display {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 5px;
    }

    .color-circle {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        border: 1.5px solid #e9ecef;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        transition: transform 0.2s ease;
    }

        .color-circle:hover {
            transform: scale(1.1);
        }

    .color-name {
        font-size: 12px;
        color: #6c757d;
        max-width: 80px;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
    }

    /* Size and price grid styles */
    .size-price-grid,
    .quantity-grid {
        display: flex;
        flex-direction: column;
        gap: 8px;
        align-items: center; /* Canh giữa các phần tử */
    }

   
    .size-price-item,
    .quantity-item {
        display: flex;
        align-items: center;
        justify-content: center; /* Canh giữa nội dung */
        gap: 12px;
        width: 100%; /* Chiếm toàn bộ chiều rộng */
    }

    .badge-size,
    .badge-quantity {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 50px;
        height: 28px;
        font-size: 12px;
        font-weight: 600;
        border-radius: 6px;
        text-transform: uppercase;
    }

    .badge-size {
        background-color: #e9ecef;
        color: #495057;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
    }

    .badge-quantity {
        background-color: #198754;
        color: #fff;
    }

        .badge-quantity.low-stock {
            background-color: #dc3545;
        }

    .price-value {
        font-weight: 600;
        color: #0d6efd;
        text-align: center; /* Canh giữa giá */
    }

    /* Action buttons styles */
    .action-buttons {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .action-group {
        display: flex;
        align-items: center;
        justify-content: center; /* Canh giữa các nút thao tác */
        gap: 8px;
    }

    .size-label {
        font-size: 12px;
        color: #6c757d;
        width: 35px;
        text-align: right;
    }

    .btn-group {
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
        border-radius: 4px;
        overflow: hidden;
    }

    .btn-outline-primary,
    .btn-outline-danger {
        border-width: 1px;
        padding: 5px 10px;
        transition: all 0.2s ease-in-out;
    }

        .btn-outline-primary:hover {
            background-color: #0d6efd;
            color: #fff;
        }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: #fff;
        }

    /* Empty state styles */
    .empty-state {
        background-color: #f8f9fa;
        border-radius: 12px;
        padding: 2rem !important;
    }

    .empty-icon {
        font-size: 3rem;
        color: #adb5bd;
    }

    /* Back button with icon */
    .btn-outline-secondary {
        transition: all 0.2s;
    }

        .btn-outline-secondary:hover {
            background-color: #6c757d;
            color: #fff;

  
</style>
